<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.autocar.dao.MemberDao">
	<select id="count" resultType="int">
		SELECT count(*) FROM member
	</select>
	<!-- 목록용으로 content 컬럼은 제외, @Param()을 사용해서 parameterType 설정 없음 #{start}는 
		@Param("start")와 연계, #{end}는 @Param("end")와 연계 -->
	<select id="getPage" resultType="Member">
		SELECT user_id, name, user_level,
		email, phone, reg_date
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY reg_date
		DESC) AS SEQ,
		user_id, name, user_level, email, phone, reg_date
		FROM member
		)
		WHERE SEQ BETWEEN #{start} AND #{end}
		ORDER BY reg_date DESC
	</select>
	<select id="findById" parameterType="String" resultType="Member">
		SELECT *
		FROM member
		WHERE user_id=#{userId}
	</select>
	<!-- insert시 sequence가 발급하는 board_id 값을 받아 board 객체에 설정 -->
	<insert id="insert" parameterType="Member">
		insert into
		member
		(user_id, password, name, user_level, email, phone, address, 
		reg_date,
		update_date)
		values(#{userId}, #{password}, #{name},
		#{userLevel}, #{email}, #{phone}, #{address},sysdate, sysdate)
	</insert>
	<!-- 게시글 수정 , 비밀번호를 아는 경우에 수정 가능 -->
	<update id="update" parameterType="Member">
		UPDATE member SET
		email = #{email},
		phone = #{phone},
		address = #{address},
		update_date = sysdate
		WHERE user_id=#{userId} and password=#{password}
		<!--  업데이트 전에 비밀번호 암호와 필요 -->
	</update>
	<!-- 게시글 삭제 , 비밀번호를 아는 경우에 삭제 가능 -->
	<update id="updateByAdmin" parameterType="Member">
		UPDATE member SET
		user_level = #{userLevel},
		email = #{email},
		phone = #{phone},
		address = #{address},
		update_date = sysdate
		WHERE user_id=#{userId}
	</update>
	
	<delete id="delete">
		DELETE FROM member
		WHERE user_id=#{userId} 
	</delete>
</mapper>